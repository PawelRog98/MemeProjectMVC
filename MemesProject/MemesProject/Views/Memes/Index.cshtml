@model MemesProject.Models.ViewModels.MemeViewModel
@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService
@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>
<p>
    <a asp-action="Create">Create New</a>
</p>
@foreach(var meme in Model.Memes)
    {
    <div class="center shadow-full">
        <div class="memecontainer">
            <div class="rounded item">
                <div class="memetitle"> @meme.Title </div>
                @Html.ActionLink(meme.IdUser,"GetUserInformation","User",new { id = meme.IdUser })
                <a asp-action="Details" asp-route-id="@meme.IdMeme">
                    @{
                        string base64 = Convert.ToBase64String(meme.File);
                        string imagesrc = "data:image/png;base64," + base64; 
                    }
                    <img src="@imagesrc" class="imgmiddle" alt="@meme.DescriptionAlt">
                </a>
                <row class="buttons">
                    <button class="transbutton">
                   
                        @if(meme.IsFavourited)
                        {
                              <img src="/images/heart.png" id="@meme.IdMeme" class="UnLikeImage"  title="Remove an image from Favourites"   alt="Dodaj do ulubionych">
                        }
                        else
                        {
                              <img src="/images/heartEmpty.png" id="@meme.IdMeme" class="likeImage"  title="Add an image to Favourites"   alt="Dodaj do ulubionych">
                        }
                  
                    </button>
                    <button class="transbutton">
                         @if(meme.IsLiked)
                                        {
                                <img src="/images/likeFull.png" id="@meme.IdMeme" class="UnfavouriteImage" title="Unlike Image"   alt="Polub">
                                        }
                                        else
                                        {
                                             <img src="/images/like.png" id="@meme.IdMeme" class="favouriteImage" title="Like Image"   alt="Polub">
                        }
                     <div id="numberLike @meme.IdMeme">@meme.Likes</div>      
                    </button>
                </row>
            </div>
        </div>
    </div>
    <a asp-action="Edit" asp-route-id="@meme.IdMeme">Edit</a>
    <a asp-action="Details" asp-route-id="@meme.IdMeme">Details</a>
    <a asp-action="Delete" asp-route-id="@meme.IdMeme">Delete</a>
    }
    @{
        var prevDisabled = !Model.PagingInfo.HasPreviousPage ? "disabled" : "";
        var nextDisabled = !Model.PagingInfo.HasNextPage ? "disabled" : "";
    }
      <a asp-action="Index"  asp-route-Page="@(Model.PagingInfo.CurrentPage - 1)"  class="btn btn-info @prevDisabled "> < </a>
       <div page-model="@Model.PagingInfo" page-classes-enabled="true" page-class="btn border" page-class-normal="btn btn-light"
                 page-class-selected="btn btn-info active" class="btn-group">
            </div> 
  
    <a asp-action="Index"  asp-route-Page="@(Model.PagingInfo.CurrentPage + 1)"  class="btn btn-info @nextDisabled">></a>

@section Scripts {

}

