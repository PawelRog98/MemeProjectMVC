@model UserInformation

@{
    ViewData["Title"] = "User Information";
}

     @{
      var base64 = Convert.ToBase64String(@Model.AvatarImage);
      var imgsrc = string.Format("data:image/jpg;base64,{0}", base64);
     }


<div class="container border">
    <br />
     <div class="row">
         <div class="d-flex justify-content-center">
           
                <div class="col-sm-2">
               <img src="@imgsrc" class="avatar-Info-Page" alt="User Avatar Image" />
                   @if(User.Identity.IsAuthenticated)
                     {    
                         @if ( User.Identity.Name!= @Model.Email)
                         {
                            @if (!Model.isObserved)
                            {
                                   <a asp-action="FollowUser" asp-route-id="@Model.Username">Follow User</a>
                            }
                            else
                            {
                               <a asp-action="UnFollowUser" asp-route-id="@Model.Username">Unfollow User</a>
                            }
                      
                         }
                     }     
                </div>
           
                <div class="col-sm-3">
                    <div class="row">
                        <p>@Model.Username</p>
                    </div>
                     <div class="row">
                        <p>Register Account Date: @Model.AccountRegisterDate</p>
                    </div>
                     <div class="row">
                        <p>Count komentarzy:@Model.IloscKomentarzy</p>
                    </div>
                     <div class="row">
                        <p>Number Memów:@Model.IloscMemow</p>
                    </div>
      
                </div>
                   <div class="col-sm-3 border border-dark">
                       Osoby Obserwujące
                       @if(Model.Observers!=null)
                       {
                        @foreach(var obs in Model.Observers)
                        {
                                  var base64st = Convert.ToBase64String(@obs.AvatarImage);
                                  var imgsrcobs = string.Format("data:image/jpg;base64,{0}", base64st);
                               <img src="@imgsrcobs" class="avatar-Info-Page" alt="User Avatar Image" />
                               <p>@obs.Username</p>
                    }
                }
                   </div>
                </div>

     
</div>
<br />
    <div class="col-md-2 offset-2">
     @if(User.Identity.IsAuthenticated)
     {    
         @if ( User.Identity.Name == @Model.Email)
         {
             <a  class="nav-link text-dark text-danger" asp-area="Identity" asp-page="/Account/Manage/Index" title="Edit Account">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Edit Account</a>
         }
     }

</div>
<br />
</div>
     @if(User.Identity.IsAuthenticated)
     {    
         @if ( User.Identity.Name == @Model.Email)
         {
             <h1>My Memes</h1>
   <a  asp-controller="User" asp-action="FavouriteMemes">Favourites Memes</a>
    }else{
           <h1>Memes of </h1>
        <h1> @Model.Username</h1>
    }

}
else
{
       <h1>Memes of </h1>
      <h1> @Model.Username</h1>
}


@foreach(var meme in Model.memeViewModel.Memes)
    {
    <div class="center shadow-full">
        <div class="memecontainer">
            <div class="rounded item">
                <div class="memetitle"> @meme.Title </div>
                @Html.ActionLink(meme.IdUser,"GetUserInformation","User",new { id = meme.IdUser })
                <a asp-controller="Memes" asp-action="Details" asp-route-id="@meme.IdMeme">
                    @{
                        string base641 = Convert.ToBase64String(meme.File);
                        string imagesrc2 = "data:image/png;base64," + base641; 
                    }
                    <img src="@imagesrc2" class="imgmiddle" alt="@meme.DescriptionAlt">
                </a>
                <row class="buttons">
                    <button class="transbutton">
                   
                        @if(meme.IsFavourited)
                        {
                              <img src="/images/heart.png" id="@meme.IdMeme" class="UnLikeImage"  title="Remove an image from Favourites"   alt="Dodaj do ulubionych">
                        }
                        else
                        {
                              <img src="/images/heartEmpty.png" id="@meme.IdMeme" class="likeImage"  title="Add an image to Favourites"   alt="Dodaj do ulubionych">
                        }
                  
                    </button>
                    <button class="transbutton">
                         @if(meme.IsLiked)
                                        {
                                <img src="/images/likeFull.png" id="@meme.IdMeme" class="UnfavouriteImage" title="Unlike Image"   alt="Polub">
                                        }
                                        else
                                        {
                                             <img src="/images/like.png" id="@meme.IdMeme" class="favouriteImage" title="Like Image"   alt="Polub">
                        }
                     <div id="numberLike @meme.IdMeme">@meme.Likes</div>      
                    </button>
                </row>
            </div>
        </div>
    </div>
    <a asp-action="Edit" asp-route-id="@meme.IdMeme">Edit</a>
    <a asp-action="Details" asp-route-id="@meme.IdMeme">Details</a>
    <a asp-action="Delete" asp-route-id="@meme.IdMeme">Delete</a>
    }

  

  @{
        var prevDisabled = !Model.memeViewModel.PagingInfo.HasPreviousPage ? "disabled" : "";
        var nextDisabled = !Model.memeViewModel.PagingInfo.HasNextPage ? "disabled" : "";
    }
      <a asp-action="GetUserInformation" asp-route-id="@Model.Username" asp-route-Page="@(Model.memeViewModel.PagingInfo.CurrentPage - 1)"  class="btn btn-info @prevDisabled "> < </a>
       <div page-model="@Model.memeViewModel.PagingInfo" page-classes-enabled="true" page-class="btn border" page-class-normal="btn btn-light"
                 page-class-selected="btn btn-info active" class="btn-group">
            </div> 
  
    <a asp-action="GetUserInformation"  asp-route-Page="@(Model.memeViewModel.PagingInfo.CurrentPage + 1)" asp-route-id="@Model.Username" class="btn btn-info @nextDisabled">></a>